name: build

# Run the workflow only when pushing to the main branch.
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    # Rather than install texlive-full using apt, which is
    # bound to take a zillion years, make use of a public
    # TeX Live Docker image.
    container:
      image: ghcr.io/xu-cheng/texlive-full:latest
    steps:
      - name: Install git
        run: |
          apk add git

      - name: Checkout
        uses: actions/checkout@master

      - name: Generate PDFs
        run: |
          git clone --depth=1 https://github.com/manu-mannattil/texmf
          export TEXMFHOME=./texmf

          # For some reason, Git doesn't treat the checked
          # out directory as a Git repo unless we do this.
          # https://github.com/actions/checkout/issues/363#issuecomment-1163942488
          # https://github.com/actions/runner/issues/2033
          git config --global --add safe.directory $(realpath .)

          make
          mkdir build
          mv -f vitae.pdf build

      # The purpose here is to replace the contents of
      # the target branch with the contents of the build
      # directory.  This is an NIH hack to avoid the use of
      # existing actions like s0/git-publish-subdir-action,
      # which is a 500+ SLOC mess written in node.js.
      - name: push build to separate branch
        env:
          GIT_BRANCH: "build"
          GIT_MESSAGE: ""
        run: |
          git config --global user.name ${{ github.actor }}
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git switch "$GIT_BRANCH" || git switch --orphan "$GIT_BRANCH"

          # Move .git to the build dir and recommit.
          mv .git ./build
          cd ./build
          git add .
          git commit --allow-empty-message -m "$GIT_MESSAGE"
          git push -u origin "$GIT_BRANCH" --force
